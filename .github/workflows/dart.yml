name: iOS-build-workflow
on:
  workflow_dispatch:
jobs:
  build-ios:
    name: üéâ iOS Build
    runs-on: macos-latest
    steps:
      # 1. Checkout el c√≥digo fuente
      - uses: actions/checkout@v3
      
      # 2. Instalar Flutter en el canal estable
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64
      
      # 3. Configurar dependencias de Flutter
      - name: Instalar dependencias de Flutter
        run: |
          flutter --version
          flutter pub get
      
      # 4. Generar archivos iOS si no existen
      - name: Generar archivos iOS
        run: |
          # Asegurarse de que el directorio iOS existe y tiene los archivos necesarios
          flutter create --platforms=ios .
          # Verificar si existe el Podfile
          if [ ! -f "ios/Podfile" ]; then
            echo "Generando Podfile manualmente..."
            cd ios
            cat > Podfile << 'EOL'
platform :ios, '12.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    # Start of the iOS 12 compatibility
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
    end
    # End of the iOS 12 compatibility
  end
end
EOL
          fi
      
      # 5. Configurar CocoaPods con manejo de errores
      - name: Configurar CocoaPods
        run: |
          cd ios
          # Reinstalar CocoaPods desde cero para evitar problemas
          sudo gem uninstall cocoapods --all
          sudo gem install cocoapods
          # Instalar pods
          pod install --repo-update
      
      # 6. Compilar para iOS en modo release sin firma
      - name: Compilar para iOS
        run: flutter build ios --release --no-codesign
      
      # 7. Crear estructura para Appetize.io
        run: |
          cd build/ios/iphoneos
          mkdir -p Payload
          cp -r Runner.app Payload/
      
      # 8. Crear archivo ZIP para Appetize.io
      - name: Crear ZIP para Appetize
        run: |
          cd build/ios/iphoneos
          zip -r AppetizeBundle.zip Payload
      
      # 9. Crear archivo IPA
      - name: Crear IPA para distribuci√≥n
        run: |
          cd build/ios/iphoneos
          zip -r FlutterApp.ipa Payload
      
      # 10. Subir los archivos como artifacts del workflow
      - name: Subir archivos como artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ios-artifacts
          path: |
            build/ios/iphoneos/AppetizeBundle.zip
            build/ios/iphoneos/FlutterApp.ipa
          retention-days: 5
          
      # 11. Crear Release y subir archivos
      - name: Crear Release y subir archivos
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0
          name: Release v1.0
          files: |
            build/ios/iphoneos/AppetizeBundle.zip
            build/ios/iphoneos/FlutterApp.ipa
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
