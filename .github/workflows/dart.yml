name: iOS-build-workflow

on:
  workflow_dispatch:

jobs:
  build-ios:
    name: 🎉 iOS Build
    runs-on: macos-latest
    steps:
      # 1. Checkout el código fuente
      - uses: actions/checkout@v3

      # 2. Instalar Flutter en el canal estable
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      # 3. Obtener las dependencias de Flutter
      - run: flutter pub get
      
      # 4. Actualizar repositorio de CocoaPods
      - run: pod repo update
        working-directory: ios

      # 5. Compilar el proyecto iOS en modo release sin firma de código
      - run: flutter build ios --release --no-codesign

      # 6. Crear la estructura requerida para el archivo .zip
      - run: mkdir Payload
        working-directory: build/ios/iphoneos
      - run: mv Runner.app Payload/
        working-directory: build/ios/iphoneos

      # 7. Comprimir el bundle .app en un archivo .zip (Appetize.io)
      - name: Create App Bundle (.zip)
        run: zip -r RunnerAppBundle.zip Payload/
        working-directory: build/ios/iphoneos

      # 8. Comprimir el .ipa para distribución
      - name: Create IPA
        run: zip -qq -r -9 FlutterIpaExport.ipa Payload
        working-directory: build/ios/iphoneos

      # 9. Subir los binarios como artefactos para releases
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/ios/iphoneos/RunnerAppBundle.zip # Archivo para Appetize
          tag: v1.0
          overwrite: true
          body: "Build compatible con Appetize y distribución como IPA"
